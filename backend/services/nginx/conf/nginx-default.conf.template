upstream keycloak {
    server keycloak:8443;
}

upstream fhir_server {
    server hapi-fhir:80;
}

upstream oauth2_proxy {
    server oauth2-proxy:4180;
}

server {
  listen 80;
  server_name ${NGINX_HOST};
  include /etc/nginx/conf/ssl.conf;

  return 301 https://$host$request_uri;
}

server {
  server_name ${NGINX_HOST};
  listen 443 ssl default_server;
  include /etc/nginx/conf/ssl.conf;

  # Redirect root to Keycloak
  location = / {
    proxy_pass        https://keycloak:8443;
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host   $host;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   $server_port;
    proxy_set_header  X-Forwarded-Proto  $scheme;
  }

  location /fhir {
    auth_request /auth/verify;
    error_page 401 = @error401;

    proxy_pass        http://fhir_server/fhir;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host   $host;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   $server_port;
    proxy_set_header  X-Forwarded-Proto  $scheme;
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  Authorization      $http_authorization;
  }

  location /auth/verify {
    internal;
    proxy_pass https://keycloak:8443/realms/hapi-fhir-dev/protocol/openid-connect/userinfo;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header Authorization $http_authorization;
  }

  location @error401 {
    return 302 https://keycloak:8443/realms/hapi-fhir-dev/protocol/openid-connect/auth?client_id=security-admin-console&redirect_uri=https%3A%2F%2F${NGINX_HOST}%2Ffhir&state=a1814295-8843-4fe9-a7d5-5ed7a9e25e2b&response_mode=query&response_type=code&scope=openid&nonce=143efb92-4eae-4157-84bc-11f72c1a0164&code_challenge=iZG_Wv23Vkqsul6ThsHDoajremZJ-2T6QRxVPHtY0SI&code_challenge_method=S256;
  }
}

# https://docs.nginx.com/nginx/admin-guide/security-controls/terminating-ssl-http/
# https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-subrequest-authentication
# https://github.com/deskoh/nginx-oauth2-proxy-demo/blob/master/nginx/nginx.conf
# https://oauth2-proxy.github.io/oauth2-proxy/configuration/integration
